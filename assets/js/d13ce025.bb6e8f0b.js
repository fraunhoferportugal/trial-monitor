"use strict";(self.webpackChunktm_docs=self.webpackChunktm_docs||[]).push([[348],{5096:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(5893),o=t(1151);const s={id:"sql",title:"SQL"},a=void 0,r={id:"Data Connectors/sql",title:"SQL",description:"The SQL connector offers support to common SQL dialects (PostgreSQL, MySQL, MariaDB, SQLite and MSSQL), and uses Sequelize under the hood to make the connections.",source:"@site/docs/02-Data Connectors/sql.md",sourceDirName:"02-Data Connectors",slug:"/Data Connectors/sql",permalink:"/trial-monitor/Data Connectors/sql",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"sql",title:"SQL"},sidebar:"tutorialSidebar",previous:{title:"Firebase",permalink:"/trial-monitor/Data Connectors/firebase"},next:{title:"Overview",permalink:"/trial-monitor/UI Definition/overview"}},c={},l=[{value:"Setting up a connection",id:"setting-up-a-connection",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Configuring the database structure",id:"configuring-the-database-structure",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The SQL connector offers support to common SQL dialects (PostgreSQL, MySQL, MariaDB, SQLite and MSSQL), and uses ",(0,i.jsx)(n.a,{href:"https://sequelize.org/master/manual/getting-started",children:"Sequelize"})," under the hood to make the connections."]}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-a-connection",children:"Setting up a connection"}),"\n",(0,i.jsxs)(n.p,{children:["The database connection can be configured by defining individual connection parameters or a single connection URI in the ",(0,i.jsx)(n.code,{children:"config"})," property."]}),"\n",(0,i.jsx)(n.p,{children:"Using the connection URI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"config: mysql://username:password@host:port/DatabaseName\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or by passing the parameters individually using the ",(0,i.jsx)(n.code,{children:"config"})," property:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"config:\n  dialect: mariadb\n  database: sql_db\n  host: 172.18.1.27\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you are using SQLite, you should do the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"config:\n  dialect: sqlite\n  storage: path/to/database.sqlite # Relative to config folder\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Note that you have to manually install the ",(0,i.jsx)(n.a,{href:"https://sequelize.org/master/manual/getting-started.html",children:"driver"})," for your database of choice"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["If required, in the configuration of each database include an object named ",(0,i.jsx)(n.code,{children:"authentication"})," with an ",(0,i.jsx)(n.code,{children:"username"})," and ",(0,i.jsx)(n.code,{children:"password"})," properties:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"authentication:\n  username: email@example.org\n  password: mypassword\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuring-the-database-structure",children:"Configuring the database structure"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the connector will try to generate the database models and their relationships. However, relations through an intermediate table might not be identified and must be defined manually. The ",(0,i.jsx)(n.code,{children:"structure"})," property enable us to manually define these relations."]}),"\n",(0,i.jsx)(n.p,{children:"Each table comprises a common set of properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"relations"})," - an array of relations. A relation contains a:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"type"})," - the type of relation, assuming as values: ",(0,i.jsx)(n.code,{children:"belongsTo"})," | ",(0,i.jsx)(n.code,{children:"belongsToMany"})," | ",(0,i.jsx)(n.code,{children:"hasMany"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"target"})," - the table to which it is linked to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"through"})," - only used in ",(0,i.jsx)(n.code,{children:"N-M"})," relations, since it reflects the intermediate table that relates both"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FK"})," - the name of the foreign key (a relation of type ",(0,i.jsx)(n.code,{children:"hasMany"})," does not require the definition of this property)"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(7294);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);