"use strict";(self.webpackChunktm_docs=self.webpackChunktm_docs||[]).push([[78],{2933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(5893),o=n(1151);const r={id:"firebase",title:"Firebase"},a=void 0,s={id:"Data Connectors/firebase",title:"Firebase",description:"The Firebase connector currently supports Cloud Firestore databases. The Cloud Firestore connector follows a NoSQL paradigm, in which data is organized on a flat structure. Collections should have references to other collections in a similar fashion to a SQL structure. A collection is linked by defining a property that references the doc id in other collections.",source:"@site/docs/02-Data Connectors/firebase.md",sourceDirName:"02-Data Connectors",slug:"/Data Connectors/firebase",permalink:"/trial-monitor/Data Connectors/firebase",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"firebase",title:"Firebase"},sidebar:"tutorialSidebar",previous:{title:"FHIR",permalink:"/trial-monitor/Data Connectors/fhir"},next:{title:"SQL",permalink:"/trial-monitor/Data Connectors/sql"}},c={},l=[{value:"Config",id:"config",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Data structure",id:"data-structure",level:2},{value:"Structure",id:"structure",level:3},{value:"Timestamps",id:"timestamps",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The Firebase connector currently supports ",(0,i.jsx)(t.a,{href:"https://firebase.google.com/docs/firestore",children:"Cloud Firestore"})," databases. The Cloud Firestore connector follows a NoSQL paradigm, in which data is organized on a flat structure. Collections should have references to other collections in a similar fashion to a SQL structure. A collection is linked by defining a property that references the doc id in other collections."]}),"\n",(0,i.jsx)(t.h2,{id:"config",children:"Config"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"data access"})," is done by defining a property ",(0,i.jsx)(t.code,{children:"config"}),". This ",(0,i.jsx)(t.code,{children:"config"})," is provided via the Firebase Console of the corresponding project:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"config:\n  apiKey: PROJECT_API_KEY\n  authDomain: project-name.firebaseapp.com\n  databaseURL: https://project-name.firebaseio.com\n  projectId: project-name\n  storageBucket: project-name.appspot.com\n  messagingSenderId: XXXXXXXXXXXXX\n"})}),"\n",(0,i.jsx)(t.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(t.p,{children:["Sign in with email and password is currently supported on Firebase databases. In the configuration of each database include an object named ",(0,i.jsx)(t.code,{children:"authentication"})," with an ",(0,i.jsx)(t.code,{children:"email"})," and ",(0,i.jsx)(t.code,{children:"password"})," properties:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"authentication:\n  email: email@example.org\n  password: mypassword\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)(t.code,{children:"authentication"})," property is not provided, Trial Monitor it will try to connect to Firebase without authentication."]}),"\n",(0,i.jsx)(t.h2,{id:"data-structure",children:"Data structure"}),"\n",(0,i.jsx)(t.h3,{id:"structure",children:"Structure"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"structure"})," field is what enables Trial Monitor to know how Firestore collections are connected to each other. To created a relation between collections, on the configuration of each collection, define a property named ",(0,i.jsx)(t.code,{children:"relations"}),". Inside, create a new property with the name of the linked collection with the value of the property used to identify that collection."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"structure:\n  users:\n    relations:\n      usersDetails: UserId\n  userDetails:\n    relations:\n      clinicalConditions: ClinicalConditionId\n"})}),"\n",(0,i.jsx)(t.h3,{id:"timestamps",children:"Timestamps"}),"\n",(0,i.jsx)(t.p,{children:"The Firebase connector can interpret Unix or Firebase native timestamps. Unix timestamps are expected by default."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"timestampField"}),": (string | object) Name of the timestamp key on your database, or an object with the ",(0,i.jsx)(t.code,{children:"name"})," and ",(0,i.jsx)(t.code,{children:"type"})," properties:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"name"}),": Name of the timestamp property on your database. Defaults to ",(0,i.jsx)(t.code,{children:"timestamp"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"type"}),": (optional) If you are using Firebase native timestamp you need to set the ",(0,i.jsx)(t.code,{children:"type"})," property to ",(0,i.jsx)(t.code,{children:"FirebaseTimestamp"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"timestampField: myTimestampName\n\n// --- OR ---\n\ntimestampField:\n  name: myTimestampName\n  type: FirebaseTimestamp\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Note that you will need to create an index on the Firebase console to be able to filter by date and user simultaneously"})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var i=n(7294);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);