"use strict";(self.webpackChunktm_docs=self.webpackChunktm_docs||[]).push([[263],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5265:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={id:"configuration",title:"Configuration"},s=void 0,c={unversionedId:"Getting started/configuration",id:"Getting started/configuration",isDocsHomePage:!1,title:"Configuration",description:"Trial Monitor uses simple configuration files to set up the platform for a specific project. Each instance of Trial Monitor has a folder with YAML or JSON files that personalize among other things the database authentication credentials, Web pages for displaying data, or the characteristics of each data visualization employed.",source:"@site/docs/01-Getting started/03-configuration.md",sourceDirName:"01-Getting started",slug:"/Getting started/configuration",permalink:"/trial-monitor/Getting started/configuration",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"configuration",title:"Configuration"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/trial-monitor/"},next:{title:"Deployment",permalink:"/trial-monitor/Getting started/deployment"}},p=[{value:"Configuration structure",id:"configuration-structure",children:[]},{value:"Blueprints",id:"blueprints",children:[{value:"<code>site.yaml</code>",id:"siteyaml",children:[]},{value:"Pages",id:"pages",children:[]}]},{value:"Cohorts",id:"cohorts",children:[]},{value:"Theming",id:"theming",children:[{value:"Logo",id:"logo",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Trial Monitor uses simple configuration files to set up the platform for a specific project. Each instance of Trial Monitor has a folder with YAML or JSON files that personalize among other things the database authentication credentials, Web pages for displaying data, or the characteristics of each data visualization employed."),(0,r.kt)("h2",{id:"configuration-structure"},"Configuration structure"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," folder should look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"config\n\u251c\u2500\u2500 blueprints\n\u251c\u2500\u2500\u2500\u2500 pages\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500 page1.yaml\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500 page2.yaml\n\u251c\u2500\u2500\u2500\u2500 dashboard.yaml\n\u251c\u2500\u2500\u2500\u2500 site.yaml\n\u251c\u2500\u2500 reducers\n\u251c\u2500\u2500 auth\n\u251c\u2500\u2500 cohorts\n\u251c\u2500\u2500 ui-config.json\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/blueprints"),": contains the site and page configurations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/auth"),": contains the configuration of the system authentication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/reducers"),": (optional) contains one or more files, exporting custom functions for parsing data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/cohorts"),": (optional) allows manually grouping users into cohorts"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ui-config.json"),": api url, auth and theme configurations for the UI")),(0,r.kt)("h2",{id:"blueprints"},"Blueprints"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"blueprints")," folder contains the configuration files with the database authentication credentials, or pages and data visualizations specifications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"site.yaml")," is the main configuration file and contains the configurations to the database, and overall settings for the platform (e.g. project title)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pages/")," contains the individual page configurations (one file per page)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dashboard.yaml")," (optional) contains the configuration of the web app main page. For more information please check the ",(0,r.kt)("a",{parentName:"li",href:"../UI%20Definition/dashboard"},"Dashboard")," page.")),(0,r.kt)("h3",{id:"siteyaml"},(0,r.kt)("inlineCode",{parentName:"h3"},"site.yaml")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"site.yaml")," file contains configurations of the databases and other global properties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"title: Project name\nusersDB: database_id\ncache:\n  expireTime: 3600\n\ndatabases:\n  - id: database_id\n    type: firebase\n    ...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"title"),": Project name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"usersDB"),": (optional) Users database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"cache"),": (optional) Specify cache expire time (default value is 300 seconds). To use cache make sure ",(0,r.kt)("inlineCode",{parentName:"li"},"redis")," service is running and accessible."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"databases"),": Is an array that describes the configuration of one or more databases. Please check ",(0,r.kt)("a",{parentName:"li",href:"../Databases/overview"},"Database")," for details.")),(0,r.kt)("h3",{id:"pages"},"Pages"),(0,r.kt)("p",null,"The pages folder contains one or more ",(0,r.kt)("inlineCode",{parentName:"p"},"yaml/json")," files that describe the interface of each page. Each configuration file allows the configuration of the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"title"),": Describes the name of the page and navigation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"components"),": A list of data visualization components. Please check ",(0,r.kt)("a",{parentName:"li",href:"../UI%20Definition/overview"},"UI Definition")," for details.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"title: Page title\n\ncomponents:\n  - type: table\n    title: Table title\n    query:\n      database: database_id\n      table: table_name\n")),(0,r.kt)("h2",{id:"cohorts"},"Cohorts"),(0,r.kt)("p",null,"By default Trial monitor displays all participants on a single list. However, it is possible to manually create cohorts to organize user data:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add a file named ",(0,r.kt)("inlineCode",{parentName:"li"},"cohorts.yaml")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"config")," folder."),(0,r.kt)("li",{parentName:"ol"},"There are two possible ways to define the cohorts:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Group users by a field"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"groupByField: gender\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a map associating the cohorts with a list of users' identifiers"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"map:\n  PT:\n    - 1\n    - 2\n  USA:\n    - 3\n")))),(0,r.kt)("h2",{id:"theming"},"Theming"),(0,r.kt)("p",null,"Trial Monitor can be customized according to the styles of your project/brand. To create a custom theme, edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"ui-config.json")," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/public")," (w/o Docker) or ",(0,r.kt)("inlineCode",{parentName:"p"},"config/")," (w/ Docker) folder according to your preference. Check the ",(0,r.kt)("inlineCode",{parentName:"p"},"ui-config.json")," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.template")," folder to see all options that can be configured."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "theme": {\n    "colors": {\n      "primary": "#007EB2",\n      "primaryTint": "#F2F5F8",\n      "primaryTintHover": "#e5ecf3",\n      "surface": "#ffffff",\n      "text": "#464646"\n    },\n    "fonts": {\n      "body": "Roboto, sans-serif"\n    }\n  }\n}\n')),(0,r.kt)("h3",{id:"logo"},"Logo"),(0,r.kt)("p",null,"To customize the logo that appears on the sidebar and login page, add an image file to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/public")," (w/o Docker) or ",(0,r.kt)("inlineCode",{parentName:"p"},"config/")," (w/ Docker) folder on the server and set the ",(0,r.kt)("inlineCode",{parentName:"p"},"logo")," field with the correct value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "theme": {\n    "logo": "logo.svg"\n  }\n}\n')))}d.isMDXComponent=!0}}]);