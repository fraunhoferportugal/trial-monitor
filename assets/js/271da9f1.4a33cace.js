"use strict";(self.webpackChunktm_docs=self.webpackChunktm_docs||[]).push([[78],{4537:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var r=n(3117),a=(n(7294),n(3905));const o={id:"firebase",title:"Firebase"},i=void 0,l={unversionedId:"Data Connectors/firebase",id:"Data Connectors/firebase",title:"Firebase",description:"The Firebase connector currently supports Cloud Firestore databases. The Cloud Firestore connector follows a NoSQL paradigm, in which data is organized on a flat structure. Collections should have references to other collections in a similar fashion to a SQL structure. A collection is linked by defining a property that references the doc id in other collections.",source:"@site/docs/02-Data Connectors/firebase.md",sourceDirName:"02-Data Connectors",slug:"/Data Connectors/firebase",permalink:"/trial-monitor/Data Connectors/firebase",draft:!1,tags:[],version:"current",frontMatter:{id:"firebase",title:"Firebase"},sidebar:"tutorialSidebar",previous:{title:"FHIR",permalink:"/trial-monitor/Data Connectors/fhir"},next:{title:"SQL",permalink:"/trial-monitor/Data Connectors/sql"}},s={},c=[{value:"Config",id:"config",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Data structure",id:"data-structure",level:2},{value:"Structure",id:"structure",level:3},{value:"Timestamps",id:"timestamps",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Firebase connector currently supports ",(0,a.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/firestore"},"Cloud Firestore")," databases. The Cloud Firestore connector follows a NoSQL paradigm, in which data is organized on a flat structure. Collections should have references to other collections in a similar fashion to a SQL structure. A collection is linked by defining a property that references the doc id in other collections."),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"data access")," is done by defining a property ",(0,a.kt)("inlineCode",{parentName:"p"},"config"),". This ",(0,a.kt)("inlineCode",{parentName:"p"},"config")," is provided via the Firebase Console of the corresponding project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"config:\n  apiKey: 'PROJECT_API_KEY'\n  authDomain: 'project-name.firebaseapp.com'\n  databaseURL: 'https://project-name.firebaseio.com'\n  projectId: 'project-name'\n  storageBucket: 'project-name.appspot.com'\n  messagingSenderId: 'XXXXXXXXXXXXX'\n")),(0,a.kt)("h2",{id:"authentication"},"Authentication"),(0,a.kt)("p",null,"Sign in with email and password is currently supported on Firebase databases. In the configuration of each database include an object named ",(0,a.kt)("inlineCode",{parentName:"p"},"authentication")," with an ",(0,a.kt)("inlineCode",{parentName:"p"},"email")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," properties:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"authentication:\n  email: email@example.org\n  password: mypassword\n")),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"authentication")," property is not provided, Trial Monitor it will try to connect to Firebase without authentication."),(0,a.kt)("h2",{id:"data-structure"},"Data structure"),(0,a.kt)("h3",{id:"structure"},"Structure"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"structure")," field is what enables Trial Monitor to know how Firestore collections are connected to each other. To created a relation between collections, on the configuration of each collection, define a property named ",(0,a.kt)("inlineCode",{parentName:"p"},"relations"),". Inside, create a new property with the name of the linked collection with the value of the property used to identify that collection."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"structure:\n  users:\n    relations:\n      usersDetails: UserId\n  userDetails:\n    relations:\n      clinicalConditions: ClinicalConditionId\n")),(0,a.kt)("h3",{id:"timestamps"},"Timestamps"),(0,a.kt)("p",null,"The Firebase connector can interpret Unix or Firebase native timestamps. Unix timestamps are expected by default."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"timestampField"),": (string | object) Name of the timestamp key on your database, or an object with the ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," properties:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name"),": Name of the timestamp property on your database. Defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"timestamp"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type"),": (optional) If you are using Firebase native timestamp you need to set the ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," property to ",(0,a.kt)("inlineCode",{parentName:"li"},"FirebaseTimestamp"),".")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"timestamp: myTimestampName\n\n// --- OR ---\n\ntimestamp:\n  name: myTimestampName\n  type: FirebaseTimestamp\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"}," Note that you will need to create an index on the Firebase console to be able to filter by date and user simultaneously")))}u.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);